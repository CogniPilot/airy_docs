{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About Airy Alicanto An Alicanto is a bird from Chilean mythology known to eat gold or silver and then glow. The bird is incapable of flight after overindulging on ore. Airy Alicanto represents the origin of CogniPilot's light weight, and minimalistic software stack following a correct by construction software paradigm. Correct by Construction Design Drivers CogniPilot is not aiming to re-invent an opensource autopilot that can be a drop in replacement for use in Hobby drones, FPV Racing drones, or a wide variety of DIY autonomous vehicles, there are many great autopilots for that ( ArduPilot , BetaFlight , PX4 ). CogniPilot instead focuses on state-of-the-art methologies for creating an autopilot with mathematically provable robustness properties. In order to achieve this level of reliability, accurate mathematical models of the vehicle and control software must be established that are beyond the expected domain of many hobbyists. However, for those willing to pursue the extra steps to create a mathematical model of their vehicle, templates are available to enable out of tree custom vehicles. CogniPilot is a new class of open source autopilot that can conduct safety critical missions such as transporting people, with a level of safety assurance not currently available in other open source autopilots. Minimum Viable Code for the Mission : By minimizing the lines of source code and branching, CogniPilot ensures higher reliability, maintainability, and verifiability of the project. Minimize Branch Statements in Control and Estimation Code : CogniPilot generally classifies its code components into two areas. The first is low-level driver and application code. The second is guidance, control, and estimation code for the vehicle. Developers carefully consider the addition of each branch (if statement etc.) in the code for the estimator and controller, as developers are modelling the entire system mathematically. Each branch statement considerably complicates the verification task. Minimize Maintenance to Maintain Reliability : A goal of CogniPilot is to support a wide variety of vehicles (Planes, Copters, Boats, Rovers, Submersibles) and user applications while maintaining software integrity and reliaiblity. CogniPilot plans to limit official support for each release to a minimal amount of vehicles for each class, while providing out of tree support via templates. Deprecate if No-longer Maintained : On each release cycle, the CogniPilot technical steering committee (TSC) will make a decision on whether to maintain official support for each vehicle platform or whether to adopt a new platform. This is to combat the slow creep in lines of code due to vehicle specific edge cases. Currently supported platforms: Rover B3RB ELM4 CogniPilot's upcoming release, to be named, but going by B-Mythical (a mythical creature with a name starting with B) will have planned additional support for: Mulirotor NXP RDDrone TBD Submersible TBD Plane TBD Software Stack Ubuntu 22.04 Zephyr RTOS 3.5 ROS 2 Humble Gazebo Garden To get started see Install","title":"Home"},{"location":"#about-airy-alicanto","text":"An Alicanto is a bird from Chilean mythology known to eat gold or silver and then glow. The bird is incapable of flight after overindulging on ore. Airy Alicanto represents the origin of CogniPilot's light weight, and minimalistic software stack following a correct by construction software paradigm.","title":"About Airy Alicanto"},{"location":"#correct-by-construction-design-drivers","text":"CogniPilot is not aiming to re-invent an opensource autopilot that can be a drop in replacement for use in Hobby drones, FPV Racing drones, or a wide variety of DIY autonomous vehicles, there are many great autopilots for that ( ArduPilot , BetaFlight , PX4 ). CogniPilot instead focuses on state-of-the-art methologies for creating an autopilot with mathematically provable robustness properties. In order to achieve this level of reliability, accurate mathematical models of the vehicle and control software must be established that are beyond the expected domain of many hobbyists. However, for those willing to pursue the extra steps to create a mathematical model of their vehicle, templates are available to enable out of tree custom vehicles. CogniPilot is a new class of open source autopilot that can conduct safety critical missions such as transporting people, with a level of safety assurance not currently available in other open source autopilots. Minimum Viable Code for the Mission : By minimizing the lines of source code and branching, CogniPilot ensures higher reliability, maintainability, and verifiability of the project. Minimize Branch Statements in Control and Estimation Code : CogniPilot generally classifies its code components into two areas. The first is low-level driver and application code. The second is guidance, control, and estimation code for the vehicle. Developers carefully consider the addition of each branch (if statement etc.) in the code for the estimator and controller, as developers are modelling the entire system mathematically. Each branch statement considerably complicates the verification task. Minimize Maintenance to Maintain Reliability : A goal of CogniPilot is to support a wide variety of vehicles (Planes, Copters, Boats, Rovers, Submersibles) and user applications while maintaining software integrity and reliaiblity. CogniPilot plans to limit official support for each release to a minimal amount of vehicles for each class, while providing out of tree support via templates. Deprecate if No-longer Maintained : On each release cycle, the CogniPilot technical steering committee (TSC) will make a decision on whether to maintain official support for each vehicle platform or whether to adopt a new platform. This is to combat the slow creep in lines of code due to vehicle specific edge cases.","title":"Correct by Construction Design Drivers"},{"location":"#currently-supported-platforms","text":"","title":"Currently supported platforms:"},{"location":"#rover","text":"B3RB ELM4 CogniPilot's upcoming release, to be named, but going by B-Mythical (a mythical creature with a name starting with B) will have planned additional support for:","title":"Rover"},{"location":"#mulirotor","text":"NXP RDDrone TBD","title":"Mulirotor"},{"location":"#submersible","text":"TBD","title":"Submersible"},{"location":"#plane","text":"TBD","title":"Plane"},{"location":"#software-stack","text":"Ubuntu 22.04 Zephyr RTOS 3.5 ROS 2 Humble Gazebo Garden To get started see Install","title":"Software Stack"},{"location":"cerebri/","text":"About Cerebri Cerebri is a correct by construction autopilot. This software paradigm simplifies the verifcation and validation task through consideration of ease of verification at the the time of writing. Github","title":"About"},{"location":"cerebri/#about-cerebri","text":"Cerebri is a correct by construction autopilot. This software paradigm simplifies the verifcation and validation task through consideration of ease of verification at the the time of writing. Github","title":"About Cerebri"},{"location":"cerebri/boards/nxp_mr_canhubk3/","text":"NXP MR CANHUBK3 More documentation coming soon. NXP documentation","title":"NXP\u00ae MR CANHUBK3"},{"location":"cerebri/boards/nxp_mr_canhubk3/#nxp-mr-canhubk3","text":"More documentation coming soon. NXP documentation","title":"NXP MR CANHUBK3"},{"location":"cerebri/boards/nxp_vmu_rt1170/","text":"NXP VMU RT1170 Overview More documentation coming soon. Board schematics","title":"NXP\u00ae VMU RT1170"},{"location":"cerebri/boards/nxp_vmu_rt1170/#nxp-vmu-rt1170-overview","text":"More documentation coming soon. Board schematics","title":"NXP VMU RT1170 Overview"},{"location":"cerebri/platforms/multicopters/","text":"MultiCopters Overview","title":"MultiCopters Overview"},{"location":"cerebri/platforms/multicopters/#multicopters-overview","text":"","title":"MultiCopters Overview"},{"location":"cerebri/platforms/rovers/","text":"Rovers Overview","title":"Rovers"},{"location":"cerebri/platforms/rovers/#rovers-overview","text":"","title":"Rovers Overview"},{"location":"cranium/compute/navqplus/setup/","text":"NavQPlus set up for CogniPilot with ROS 2 Humble Before starting Important The NavQPlus Ubuntu 22.04 with ROS 2 Humble image uses CycloneDDS by default. 1 3 Attention These directions are written for someone with experience with embedded Linux and basic embedded computers. Step-by-step Download the pre-built latest Ubuntu 22.04 with ROS2 Humble and CycloneDDS image , exact instructions for that release image are included on the release documentation to use in conjunction with this guide. Extract the image navqplus-image-<version>.wic from the compressed downloaded file navqplus-image-<version>.wic.zstd and flash it to the EMMC , exact copy and paste instructions are on the release page. Log in for the first time by connecting to another computer using the USB to UART adatper , ethernet adapter or centermost (USB 2) USB-C\u00ae port . 2 Configure Wifi, System User Name and Password. Connect to NavQPlus over WiFi Install CogniPilot by running the included installer script. Flashing the eMMC To flash the eMMC on the NavQPlus use the uuu tool as part of the downloadable assests from the release. Once uuu has downloaded make sure to set it as executable: chmod a+x uuu find the boot switches on the NavQPlus and flip them to the \"Flash\" mode. Then, connect NavQPlus to the computer with the downloaded release using the leftmost (USB 1) USB-C\u00ae port and the two flash status lights should light up as shown in the image. Run the following command to make sure that the NavQPlus is recognized by uuu : ./uuu -lsusb If it shows that a device is connected, continue to flashing. To flash the board, use the general command below or copy and paste the specific command from the release: sudo ./uuu -b emmc_all navqplus-image-<version>.bin-flash_evk navqplus-image-<version>.wic Once this process has finished, make sure that the flash was successfull by comparing to the image below. If so, configure the boot switches to boot from eMMC. Boot Switches NavQPlus can be configured to boot from either SD card or eMMC. It also has a flash mode that allows for to flashing either the eMMC or SD card over USB-C\u00ae. See the table below for the boot switch configuration. Note we suggest to only flash and run from eMMC and leave the SD card for external storage. Mode Switch 1 Switch 2 SD ON ON eMMC OFF ON Flash ON OFF Log in for the first time Power on the NavQPlus by plugging in a USB-C\u00ae cable to the centermost (USB 2) USB-C\u00ae port or the 5 pin JST-GH power port if not powering over the centermost (USB 2) USB-C\u00ae port. NavQPlus will boot, and dispaly that it is fully booted with the status LEDs on board. The 3 LEDs by the USB1 port should be on, as well as two LEDs next to the CAN bus connectors. To log into NavQPlus, choose between using the included USB to UART adapter , Industrial Ethernet , or USB-C\u00ae with gadget ethernet mode . The default username/password combo is as follows: Username: user Password: user USB to UART adapter Connect the included USB to UART adapter to the UART2 port on the NavQPlus, and open a serial console application with a baud rate of 115200 8N1. Press enter if there is no output on the screen to get a log-in prompt. If using screen : screen /dev/ttyUSB<#> 115200 Attention To exit screen cleanly when done press simultaneously Ctrl Shift A followed by typing k then y . Ethernet Connect the included IX Industrial Ethernet cable to NavQPlus, and connect the RJ45 connector to another computer, switch, or router on the local network. Log into NavQPlus over SSH. To SSH into NavQPlus, run the following command: ssh <username>@<hostname>.local Or depending on network setup: ssh <username>@<hostname> Important Default hostname is imx8mpnavq . The hostname can be changed and is suggested to be changed if running multiple NavQPlus on the same network. USB-C\u00ae Gadget Ethernet The IP address of the usb0 network interface on NavQPlus is statically assigned to 192.168.186.3. To use the USB-C\u00ae gadget ethernet to connect to the NavQPlus, assign a static IP on the connecting computers existing gadget ethernet interface. The network configuration is as follows: IP Address: 192.168.186.2 Network Mask: 255.255.255.0 Once USB-C\u00ae gadget ethernet interface is set up on the connected computer, SSH by running: ssh <username>@<hostname>.local Important Default hostname is imx8mpnavq . The hostname can be changed and is suggested to be changed if running multiple NavQPlus on the same network. Configuring WiFi, System Hostname, Username or Password Configuring WiFi on NavQPlus To connect NavQPlus to a WiFi network, use the nmcli command. The interface is relatively straightforward, to connect with nmcli , run the following command: sudo nmcli device wifi connect <network_name> password \"<password>\" If struggling to connect to a network, see if it is visible by running: sudo nmcli device wifi list Once connected to the WiFi network the NavQPlus will continue to connect to that network even after a reboot. To see what Wifi network the NavQPlus is currently connected to you can run without sudo : nmcli device wifi connect <network_name> password \"<password>\" Or if running with sudo it will be the network preceeded with a star. OPTIONAL - Configuring System Hostname, Username or Password Optionally, to change the default hostname, username, or password, use the commands below. Change Hostname hostnamectl set-hostname <new_hostname> Change Username Warning Changing the username can be dangerous and possibly result in a broken system state requiring a re-flash. usermod -l <new_username> user mv /home/user /home/<new_username> Change Password passwd Connecting to NavQPlus over WiFi Once setup to connect over a local WiFi network, SSH into the NavQPlus over WiFi by running: ssh <username>@<hostname>.local Or depending on network setup: ssh <username>@<hostname> Important Default hostname is imx8mpnavq . The hostname can be changed and is suggested to be changed if running multiple NavQPlus on the same network. Install CogniPilot through included script Included in the image is an installation script that auto-updates when run. Before running make sure that the NavQPlus is connected to the internet on a network that allows it to download from github and Ubuntu servers. In the home directory there is a simple helper script that downloads and runs the latest CogniPilot NavQPlus installer . Attention If you want to use SSH keys with github on the NavQPlus you must first add or create them on the device. Otherwise you will need to answer n when asked to clone using already setup github ssh keys. Run the installer script: ./install_cognipilot.sh Attention It is reccomended to select y for runtime optimization when prompted Important Choose the appropriate release and vehicle/robot to build for. Further vehicle specific commands and information can be found in the site navigation under Reference Systems Ubuntu is a registered trademark of Canonical Ltd. \u21a9 USB-C\u00ae is a trademark of USB Implementers Forum. \u21a9 ROS 2 is governed by Open Robotics \u21a9","title":"Setup"},{"location":"cranium/compute/navqplus/setup/#navqplus-set-up-for-cognipilot-with-ros-2-humble","text":"","title":"NavQPlus set up for CogniPilot with ROS 2 Humble"},{"location":"cranium/compute/navqplus/setup/#before-starting","text":"Important The NavQPlus Ubuntu 22.04 with ROS 2 Humble image uses CycloneDDS by default. 1 3 Attention These directions are written for someone with experience with embedded Linux and basic embedded computers.","title":"Before starting"},{"location":"cranium/compute/navqplus/setup/#step-by-step","text":"Download the pre-built latest Ubuntu 22.04 with ROS2 Humble and CycloneDDS image , exact instructions for that release image are included on the release documentation to use in conjunction with this guide. Extract the image navqplus-image-<version>.wic from the compressed downloaded file navqplus-image-<version>.wic.zstd and flash it to the EMMC , exact copy and paste instructions are on the release page. Log in for the first time by connecting to another computer using the USB to UART adatper , ethernet adapter or centermost (USB 2) USB-C\u00ae port . 2 Configure Wifi, System User Name and Password. Connect to NavQPlus over WiFi Install CogniPilot by running the included installer script.","title":"Step-by-step"},{"location":"cranium/compute/navqplus/setup/#flashing-the-emmc","text":"To flash the eMMC on the NavQPlus use the uuu tool as part of the downloadable assests from the release. Once uuu has downloaded make sure to set it as executable: chmod a+x uuu find the boot switches on the NavQPlus and flip them to the \"Flash\" mode. Then, connect NavQPlus to the computer with the downloaded release using the leftmost (USB 1) USB-C\u00ae port and the two flash status lights should light up as shown in the image. Run the following command to make sure that the NavQPlus is recognized by uuu : ./uuu -lsusb If it shows that a device is connected, continue to flashing. To flash the board, use the general command below or copy and paste the specific command from the release: sudo ./uuu -b emmc_all navqplus-image-<version>.bin-flash_evk navqplus-image-<version>.wic Once this process has finished, make sure that the flash was successfull by comparing to the image below. If so, configure the boot switches to boot from eMMC.","title":"Flashing the eMMC"},{"location":"cranium/compute/navqplus/setup/#boot-switches","text":"NavQPlus can be configured to boot from either SD card or eMMC. It also has a flash mode that allows for to flashing either the eMMC or SD card over USB-C\u00ae. See the table below for the boot switch configuration. Note we suggest to only flash and run from eMMC and leave the SD card for external storage. Mode Switch 1 Switch 2 SD ON ON eMMC OFF ON Flash ON OFF","title":"Boot Switches"},{"location":"cranium/compute/navqplus/setup/#log-in-for-the-first-time","text":"Power on the NavQPlus by plugging in a USB-C\u00ae cable to the centermost (USB 2) USB-C\u00ae port or the 5 pin JST-GH power port if not powering over the centermost (USB 2) USB-C\u00ae port. NavQPlus will boot, and dispaly that it is fully booted with the status LEDs on board. The 3 LEDs by the USB1 port should be on, as well as two LEDs next to the CAN bus connectors. To log into NavQPlus, choose between using the included USB to UART adapter , Industrial Ethernet , or USB-C\u00ae with gadget ethernet mode . The default username/password combo is as follows: Username: user Password: user","title":"Log in for the first time"},{"location":"cranium/compute/navqplus/setup/#usb-to-uart-adapter","text":"Connect the included USB to UART adapter to the UART2 port on the NavQPlus, and open a serial console application with a baud rate of 115200 8N1. Press enter if there is no output on the screen to get a log-in prompt. If using screen : screen /dev/ttyUSB<#> 115200 Attention To exit screen cleanly when done press simultaneously Ctrl Shift A followed by typing k then y .","title":"USB to UART adapter"},{"location":"cranium/compute/navqplus/setup/#ethernet","text":"Connect the included IX Industrial Ethernet cable to NavQPlus, and connect the RJ45 connector to another computer, switch, or router on the local network. Log into NavQPlus over SSH. To SSH into NavQPlus, run the following command: ssh <username>@<hostname>.local Or depending on network setup: ssh <username>@<hostname> Important Default hostname is imx8mpnavq . The hostname can be changed and is suggested to be changed if running multiple NavQPlus on the same network.","title":"Ethernet"},{"location":"cranium/compute/navqplus/setup/#usb-c-gadget-ethernet","text":"The IP address of the usb0 network interface on NavQPlus is statically assigned to 192.168.186.3. To use the USB-C\u00ae gadget ethernet to connect to the NavQPlus, assign a static IP on the connecting computers existing gadget ethernet interface. The network configuration is as follows: IP Address: 192.168.186.2 Network Mask: 255.255.255.0 Once USB-C\u00ae gadget ethernet interface is set up on the connected computer, SSH by running: ssh <username>@<hostname>.local Important Default hostname is imx8mpnavq . The hostname can be changed and is suggested to be changed if running multiple NavQPlus on the same network.","title":"USB-C\u00ae Gadget Ethernet"},{"location":"cranium/compute/navqplus/setup/#configuring-wifi-system-hostname-username-or-password","text":"","title":"Configuring WiFi, System Hostname, Username or Password"},{"location":"cranium/compute/navqplus/setup/#configuring-wifi-on-navqplus","text":"To connect NavQPlus to a WiFi network, use the nmcli command. The interface is relatively straightforward, to connect with nmcli , run the following command: sudo nmcli device wifi connect <network_name> password \"<password>\" If struggling to connect to a network, see if it is visible by running: sudo nmcli device wifi list Once connected to the WiFi network the NavQPlus will continue to connect to that network even after a reboot. To see what Wifi network the NavQPlus is currently connected to you can run without sudo : nmcli device wifi connect <network_name> password \"<password>\" Or if running with sudo it will be the network preceeded with a star.","title":"Configuring WiFi on NavQPlus"},{"location":"cranium/compute/navqplus/setup/#optional-configuring-system-hostname-username-or-password","text":"Optionally, to change the default hostname, username, or password, use the commands below.","title":"OPTIONAL - Configuring System Hostname, Username or Password"},{"location":"cranium/compute/navqplus/setup/#change-hostname","text":"hostnamectl set-hostname <new_hostname>","title":"Change Hostname"},{"location":"cranium/compute/navqplus/setup/#change-username","text":"Warning Changing the username can be dangerous and possibly result in a broken system state requiring a re-flash. usermod -l <new_username> user mv /home/user /home/<new_username>","title":"Change Username"},{"location":"cranium/compute/navqplus/setup/#change-password","text":"passwd","title":"Change Password"},{"location":"cranium/compute/navqplus/setup/#connecting-to-navqplus-over-wifi","text":"Once setup to connect over a local WiFi network, SSH into the NavQPlus over WiFi by running: ssh <username>@<hostname>.local Or depending on network setup: ssh <username>@<hostname> Important Default hostname is imx8mpnavq . The hostname can be changed and is suggested to be changed if running multiple NavQPlus on the same network.","title":"Connecting to NavQPlus over WiFi"},{"location":"cranium/compute/navqplus/setup/#install-cognipilot-through-included-script","text":"Included in the image is an installation script that auto-updates when run. Before running make sure that the NavQPlus is connected to the internet on a network that allows it to download from github and Ubuntu servers. In the home directory there is a simple helper script that downloads and runs the latest CogniPilot NavQPlus installer . Attention If you want to use SSH keys with github on the NavQPlus you must first add or create them on the device. Otherwise you will need to answer n when asked to clone using already setup github ssh keys. Run the installer script: ./install_cognipilot.sh Attention It is reccomended to select y for runtime optimization when prompted Important Choose the appropriate release and vehicle/robot to build for. Further vehicle specific commands and information can be found in the site navigation under Reference Systems Ubuntu is a registered trademark of Canonical Ltd. \u21a9 USB-C\u00ae is a trademark of USB Implementers Forum. \u21a9 ROS 2 is governed by Open Robotics \u21a9","title":"Install CogniPilot through included script"},{"location":"cranium/corti/corti/","text":"Corti Overview","title":"Corti"},{"location":"cranium/corti/corti/#corti-overview","text":"","title":"Corti Overview"},{"location":"cranium/synapse/synapse/","text":"Synapse Overview","title":"Synapse"},{"location":"cranium/synapse/synapse/#synapse-overview","text":"","title":"Synapse Overview"},{"location":"dream/worlds/worlds/","text":"Worlds Overview","title":"Worlds"},{"location":"dream/worlds/worlds/#worlds-overview","text":"","title":"Worlds Overview"},{"location":"electrode/joystick/","text":"Joystick Overview","title":"Joystick"},{"location":"electrode/joystick/#joystick-overview","text":"","title":"Joystick Overview"},{"location":"electrode/rviz2/","text":"RVIZ 2 Overview","title":"RVIZ 2"},{"location":"electrode/rviz2/#rviz-2-overview","text":"","title":"RVIZ 2 Overview"},{"location":"getting_started/install/","text":"Installation for development computer Requirements Ubuntu 22.04 host environment This may work on other environments but only Ubuntu 22.04 is officially supported. Setup SSH keys on Host and GitHub Ensure that you have setup your ssh keys on host computer and GitHub to be able to clone the CogniPilot repositories. Setup GPG keys on Host and GitHub (Optional) Optionally you can also setup your gpg keys on host computer and GitHub to sign your commits. Install Git sudo apt install git Docker Option If preffering to use docker, there is a Docker Development Container that may be used. Clone Helmet mkdir -p ~/cognipilot cd ~/cognipilot git clone -b airy git@github.com:cognipilot/helmet Run Install Script (If not using docker) ~/cognipilot/helmet/install/native_install.sh . ~/.profile Convenience Script Examples build_b3rb_SIL build_b3rb_sil This command executes the script build_b3rb_SIL . This script: Sets up the vcs workspaces based on yaml files provided in helmet. Builds the cranium ROS 2 workspace Builds Cerebri native_posix software-in-the-loop simuliation Builds Cyecca (control/estimation software) Builds Electrode (ground station software) docs docs This command executes the script docs . This script: Downloads and builds the documentation repository for the documentation currently being read so that contributions can be made easily. cyecca cyecca This script: Starts a JupyterLab instance for Cyecca to aid in developing algorithms. Run B3RB SIL (in JupyterLab terminal or Bash directly) ros2 launch b3rb_gz_bringup sil.launch.py Attention If running on a machine with a more powerful graphics card optionally run more gaphics intensive depot world: ros2 launch b3rb_gz_bringup sil.launch.py world:=depot Simulation Example of simulation running (depot world). Attention Use a joystick controller ( Logitech F310 suggested) to control vehicle modes. Select a Mode: A : manual X : cmd_vel (nav2) B : auto (other cmd_vel) Y : calibration Manual Mode: Left stick Up/Down: throttle Right stick Left/Right: steering Nav2 (cmd_vel) Mode: Click 2D Pose Goal and select desired location on RVIZ2 map. Auto Mode Click 2D Pose Goal and select desired location on RVIZ2 map. Arming START : arm BACK : disarm","title":"Getting Started"},{"location":"getting_started/install/#installation-for-development-computer","text":"","title":"Installation for development computer"},{"location":"getting_started/install/#requirements","text":"Ubuntu 22.04 host environment This may work on other environments but only Ubuntu 22.04 is officially supported.","title":"Requirements"},{"location":"getting_started/install/#setup-ssh-keys-on-host-and-github","text":"Ensure that you have setup your ssh keys on host computer and GitHub to be able to clone the CogniPilot repositories.","title":"Setup SSH keys on Host and GitHub"},{"location":"getting_started/install/#setup-gpg-keys-on-host-and-github-optional","text":"Optionally you can also setup your gpg keys on host computer and GitHub to sign your commits.","title":"Setup GPG keys on Host and GitHub (Optional)"},{"location":"getting_started/install/#install-git","text":"sudo apt install git","title":"Install Git"},{"location":"getting_started/install/#docker-option","text":"If preffering to use docker, there is a Docker Development Container that may be used.","title":"Docker Option"},{"location":"getting_started/install/#clone-helmet","text":"mkdir -p ~/cognipilot cd ~/cognipilot git clone -b airy git@github.com:cognipilot/helmet","title":"Clone Helmet"},{"location":"getting_started/install/#run-install-script-if-not-using-docker","text":"~/cognipilot/helmet/install/native_install.sh . ~/.profile","title":"Run Install Script (If not using docker)"},{"location":"getting_started/install/#convenience-script-examples","text":"","title":"Convenience Script Examples"},{"location":"getting_started/install/#build_b3rb_sil","text":"build_b3rb_sil This command executes the script build_b3rb_SIL . This script: Sets up the vcs workspaces based on yaml files provided in helmet. Builds the cranium ROS 2 workspace Builds Cerebri native_posix software-in-the-loop simuliation Builds Cyecca (control/estimation software) Builds Electrode (ground station software)","title":"build_b3rb_SIL"},{"location":"getting_started/install/#docs","text":"docs This command executes the script docs . This script: Downloads and builds the documentation repository for the documentation currently being read so that contributions can be made easily.","title":"docs"},{"location":"getting_started/install/#cyecca","text":"cyecca This script: Starts a JupyterLab instance for Cyecca to aid in developing algorithms.","title":"cyecca"},{"location":"getting_started/install/#run-b3rb-sil-in-jupyterlab-terminal-or-bash-directly","text":"ros2 launch b3rb_gz_bringup sil.launch.py Attention If running on a machine with a more powerful graphics card optionally run more gaphics intensive depot world: ros2 launch b3rb_gz_bringup sil.launch.py world:=depot","title":"Run B3RB SIL (in JupyterLab terminal or Bash directly)"},{"location":"getting_started/install/#simulation","text":"Example of simulation running (depot world). Attention Use a joystick controller ( Logitech F310 suggested) to control vehicle modes.","title":"Simulation"},{"location":"getting_started/install/#select-a-mode","text":"A : manual X : cmd_vel (nav2) B : auto (other cmd_vel) Y : calibration","title":"Select a Mode:"},{"location":"getting_started/install/#manual-mode","text":"Left stick Up/Down: throttle Right stick Left/Right: steering","title":"Manual Mode:"},{"location":"getting_started/install/#nav2-cmd_vel-mode","text":"Click 2D Pose Goal and select desired location on RVIZ2 map.","title":"Nav2 (cmd_vel) Mode:"},{"location":"getting_started/install/#auto-mode","text":"Click 2D Pose Goal and select desired location on RVIZ2 map.","title":"Auto Mode"},{"location":"getting_started/install/#arming","text":"START : arm BACK : disarm","title":"Arming"},{"location":"getting_started/advanced/docker/","text":"Docker If you wish, there is a development docker container ( docker hub , docker source ) for CogniPilot with Nvidia GPU support. If you use this option, do not run the native_install script, as the packages are already installed. Dependencies You must install the latest official docker. Install Docker Tip Don't forget Linux Post Install Clone Docker Repository On the Host mkdir -p ~/cognipilot cd ~/cognipilot git clone https://github.com/cognipilot/docker cd ~/cognipilot/docker git submodule update --init --recursive Start the Docker Image The dream start command, automatically pulls the dream image from dockerhub, and starts the image. On the Host cd ~/cognipilot/docker/dream ./dream start Execute a Command on the Docker Image This starts a shell within the container. On the Host ./dream exec If passed extra arguments will run those commands as well. Convenience Scripts (Docker Specific) unlock This command executes the script docs . Unlocks GPG and SSH keys mounted in the docker image. Within the Container unlock See the other non-docker specific scripts in the main installation Build the Docker Image (For Advanced Users) This process will take awhile. It is usually sufficient to use dream start instead, which will automatically pull the latest image from dockerhub. On the Host cd ~/cognipilot/docker/dream ./dream build","title":"Docker"},{"location":"getting_started/advanced/docker/#docker","text":"If you wish, there is a development docker container ( docker hub , docker source ) for CogniPilot with Nvidia GPU support. If you use this option, do not run the native_install script, as the packages are already installed.","title":"Docker"},{"location":"getting_started/advanced/docker/#dependencies","text":"You must install the latest official docker. Install Docker Tip Don't forget Linux Post Install","title":"Dependencies"},{"location":"getting_started/advanced/docker/#clone-docker-repository","text":"On the Host mkdir -p ~/cognipilot cd ~/cognipilot git clone https://github.com/cognipilot/docker cd ~/cognipilot/docker git submodule update --init --recursive","title":"Clone Docker Repository"},{"location":"getting_started/advanced/docker/#start-the-docker-image","text":"The dream start command, automatically pulls the dream image from dockerhub, and starts the image. On the Host cd ~/cognipilot/docker/dream ./dream start","title":"Start the Docker Image"},{"location":"getting_started/advanced/docker/#execute-a-command-on-the-docker-image","text":"This starts a shell within the container. On the Host ./dream exec If passed extra arguments will run those commands as well.","title":"Execute a Command on the Docker Image"},{"location":"getting_started/advanced/docker/#convenience-scripts-docker-specific","text":"","title":"Convenience Scripts (Docker Specific)"},{"location":"getting_started/advanced/docker/#unlock","text":"This command executes the script docs . Unlocks GPG and SSH keys mounted in the docker image. Within the Container unlock See the other non-docker specific scripts in the main installation","title":"unlock"},{"location":"getting_started/advanced/docker/#build-the-docker-image-for-advanced-users","text":"This process will take awhile. It is usually sufficient to use dream start instead, which will automatically pull the latest image from dockerhub. On the Host cd ~/cognipilot/docker/dream ./dream build","title":"Build the Docker Image (For Advanced Users)"},{"location":"helmet/","text":"Helmet Overview","title":"About"},{"location":"helmet/#helmet-overview","text":"","title":"Helmet Overview"},{"location":"reference_systems/b3rb/hardware/","text":"B3RB Platform Overview Example of Navigation Status Sounds These sounds allow for audio based system diagnosis. Startup Sound Flight of the Alicanto Startup sound signifies the system has booted. State Change Request Sounds Rejected State Change Request Low tone followed by mid-high-low-mid-high sinusoid. Mode Sounds Manual Sound Morse Code 1 for mode enum (. - - - -) CMD_VEL Sound Morse Code 3 for mode enum (. . . - -) Calibration Sound Morse Code 4 for mode enum (. . . . -) Safety Sounds Safety Off Sound Morse Code S increasing long octives (- - -) Safety On Sound Morse Code S decreasing long octives (- - -) Arming Sounds Arm Sound Morse Code A mid-high tone (. -) Disarm Sound Morse Code A mid-low tone (. -) Connection Loss Sounds Joy Input Loss Sound Morse Code E every 3 seconds ( . ) (sounds only after safety is off). Fuel Status Sounds Fuel Low Sound Morse Code EK every 10 seconds ( . - . - ) Fuel Critical Sound Morse Code EK continuous ( . - . - )","title":"Hardware"},{"location":"reference_systems/b3rb/hardware/#b3rb-platform-overview","text":"","title":"B3RB Platform Overview"},{"location":"reference_systems/b3rb/hardware/#example-of-navigation","text":"","title":"Example of Navigation"},{"location":"reference_systems/b3rb/hardware/#status-sounds","text":"These sounds allow for audio based system diagnosis.","title":"Status Sounds"},{"location":"reference_systems/b3rb/hardware/#startup-sound","text":"","title":"Startup Sound"},{"location":"reference_systems/b3rb/hardware/#flight-of-the-alicanto","text":"Startup sound signifies the system has booted.","title":"Flight of the Alicanto"},{"location":"reference_systems/b3rb/hardware/#state-change-request-sounds","text":"","title":"State Change Request Sounds"},{"location":"reference_systems/b3rb/hardware/#rejected-state-change-request","text":"Low tone followed by mid-high-low-mid-high sinusoid.","title":"Rejected State Change Request"},{"location":"reference_systems/b3rb/hardware/#mode-sounds","text":"","title":"Mode Sounds"},{"location":"reference_systems/b3rb/hardware/#manual-sound","text":"Morse Code 1 for mode enum (. - - - -)","title":"Manual Sound"},{"location":"reference_systems/b3rb/hardware/#cmd_vel-sound","text":"Morse Code 3 for mode enum (. . . - -)","title":"CMD_VEL Sound"},{"location":"reference_systems/b3rb/hardware/#calibration-sound","text":"Morse Code 4 for mode enum (. . . . -)","title":"Calibration Sound"},{"location":"reference_systems/b3rb/hardware/#safety-sounds","text":"","title":"Safety Sounds"},{"location":"reference_systems/b3rb/hardware/#safety-off-sound","text":"Morse Code S increasing long octives (- - -)","title":"Safety Off Sound"},{"location":"reference_systems/b3rb/hardware/#safety-on-sound","text":"Morse Code S decreasing long octives (- - -)","title":"Safety On Sound"},{"location":"reference_systems/b3rb/hardware/#arming-sounds","text":"","title":"Arming Sounds"},{"location":"reference_systems/b3rb/hardware/#arm-sound","text":"Morse Code A mid-high tone (. -)","title":"Arm Sound"},{"location":"reference_systems/b3rb/hardware/#disarm-sound","text":"Morse Code A mid-low tone (. -)","title":"Disarm Sound"},{"location":"reference_systems/b3rb/hardware/#connection-loss-sounds","text":"","title":"Connection Loss Sounds"},{"location":"reference_systems/b3rb/hardware/#joy-input-loss-sound","text":"Morse Code E every 3 seconds ( . ) (sounds only after safety is off).","title":"Joy Input Loss Sound"},{"location":"reference_systems/b3rb/hardware/#fuel-status-sounds","text":"","title":"Fuel Status Sounds"},{"location":"reference_systems/b3rb/hardware/#fuel-low-sound","text":"Morse Code EK every 10 seconds ( . - . - )","title":"Fuel Low Sound"},{"location":"reference_systems/b3rb/hardware/#fuel-critical-sound","text":"Morse Code EK continuous ( . - . - )","title":"Fuel Critical Sound"},{"location":"reference_systems/b3rb/simulation/","text":"Buggy 3 Simulation","title":"Simulation"},{"location":"reference_systems/b3rb/simulation/#buggy-3-simulation","text":"","title":"Buggy 3 Simulation"},{"location":"reference_systems/elm4/el_mandadero/","text":"El Mandadero Platform Overview","title":"El Mandadero Platform Overview"},{"location":"reference_systems/elm4/el_mandadero/#el-mandadero-platform-overview","text":"","title":"El Mandadero Platform Overview"},{"location":"reference_systems/elm4/simulation/","text":"Simulate El Mandadero","title":"Simulate El Mandadero"},{"location":"reference_systems/elm4/simulation/#simulate-el-mandadero","text":"","title":"Simulate El Mandadero"},{"location":"reference_systems/melm/minimando/","text":"El Mandadero Platform Overview","title":"El Mandadero Platform Overview"},{"location":"reference_systems/melm/minimando/#el-mandadero-platform-overview","text":"","title":"El Mandadero Platform Overview"},{"location":"reference_systems/melm/simulation/","text":"Simulate MiniMando","title":"Simulate MiniMando"},{"location":"reference_systems/melm/simulation/#simulate-minimando","text":"","title":"Simulate MiniMando"},{"location":"reference_systems/rddrone/rddrone/","text":"RDDRONE Platform Overview","title":"RDDRONE Platform Overview"},{"location":"reference_systems/rddrone/rddrone/#rddrone-platform-overview","text":"","title":"RDDRONE Platform Overview"},{"location":"reference_systems/rddrone/simulation/","text":"Simulate RDDRONE","title":"Simulate RDDRONE"},{"location":"reference_systems/rddrone/simulation/#simulate-rddrone","text":"","title":"Simulate RDDRONE"},{"location":"spinali/canfd/","text":"CANFD Overview","title":"CANFD Overview"},{"location":"spinali/canfd/#canfd-overview","text":"","title":"CANFD Overview"},{"location":"spinali/actuators/actuators/","text":"Actuators Overview","title":"Actuators Overview"},{"location":"spinali/actuators/actuators/#actuators-overview","text":"","title":"Actuators Overview"},{"location":"spinali/sensors/sensors/","text":"Sensors Overview","title":"Sensors Overview"},{"location":"spinali/sensors/sensors/#sensors-overview","text":"","title":"Sensors Overview"},{"location":"tools/hcdf/hcdf/","text":"HCDF Overview","title":"HCDF Overview"},{"location":"tools/hcdf/hcdf/#hcdf-overview","text":"","title":"HCDF Overview"},{"location":"tools/pyecca/pyecca/","text":"Pyecca Overview","title":"Pyecca"},{"location":"tools/pyecca/pyecca/#pyecca-overview","text":"","title":"Pyecca Overview"}]}