{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About Airy Alicanto","text":"<p>An Alicanto is a bird from  Chilean mythology known to eat gold or silver and then glow. The bird is incapable of flight after overindulging on ore.</p> <p>Airy Alicanto represents the origin of CogniPilot's light weight, and minimalistic software stack following a correct by construction software paradigm.</p>"},{"location":"#correct-by-construction-design-drivers","title":"Correct by Construction Design Drivers","text":"<p>CogniPilot is not aiming to re-invent an opensource autopilot that can be a drop in replacement for use in Hobby drones, FPV Racing drones, or a wide variety of DIY autonomous vehicles, there are many great autopilots for that (ArduPilot, BetaFlight, PX4). CogniPilot instead focuses on state-of-the-art methologies for creating an autopilot with mathematically provable robustness properties. In order to achieve this level of reliability, accurate mathematical models of the vehicle and control software must be established that are beyond the expected domain of many hobbyists. However, for those willing to pursue the extra steps to create a mathematical model of their vehicle, templates are available to enable out of tree custom vehicles. CogniPilot is a new class of open source autopilot that can conduct safety critical missions such as transporting people, with a level of safety assurance not currently available in other open source autopilots.</p> <ul> <li> <p>Minimum Viable Code for the Mission: By minimizing the lines of source code and branching, CogniPilot ensures higher reliability, maintainability, and verifiability of the project. </p> </li> <li> <p>Minimize Branch Statements in Control and Estimation Code: CogniPilot generally classifies its code components into two areas. The first is low-level driver and application code. The second is guidance, control, and estimation code for the vehicle. Developers carefully consider the addition of each branch (if statement etc.) in the code for the estimator and controller, as developers are modelling the entire system mathematically. Each branch statement considerably complicates the verification task.</p> </li> <li> <p>Minimize Maintenance to Maintain Reliability: A goal of CogniPilot is to support a wide variety of vehicles (Planes, Copters, Boats, Rovers, Submersibles) and user applications while maintaining software integrity and reliaiblity. CogniPilot plans to limit official support for each release to a minimal amount of vehicles for each class, while providing out of tree support via templates.</p> </li> <li> <p>Deprecate if No-longer Maintained: On each release cycle, the CogniPilot technical steering committee (TSC) will make a decision on whether to maintain official support for each vehicle platform or whether to adopt a new platform. This is to combat the slow creep in lines of code due to vehicle specific edge cases. </p> </li> </ul>"},{"location":"#currently-supported-platforms","title":"Currently supported platforms:","text":""},{"location":"#rover","title":"Rover","text":"<ul> <li>B3RB</li> <li>ELM4</li> </ul> <p>CogniPilot's upcoming release, to be named, but going by B-Mythical (a mythical creature with a name starting with B) will have planned additional support for:</p>"},{"location":"#mulirotor","title":"Mulirotor","text":"<ul> <li>NXP RDDrone</li> <li>TBD</li> </ul>"},{"location":"#submersible","title":"Submersible","text":"<ul> <li>TBD</li> </ul>"},{"location":"#plane","title":"Plane","text":"<ul> <li>TBD</li> </ul>"},{"location":"#software-stack","title":"Software Stack","text":"<ul> <li>Ubuntu 22.04</li> <li>Zephyr RTOS 3.5</li> <li>ROS 2 Humble</li> <li>Gazebo Garden</li> </ul>"},{"location":"#get-started","title":"Get started:","text":"<p>To get started follow the guide on [how to install].(./getting_started/install.md)</p>"},{"location":"cerebri/about/","title":"About Cerebri","text":"<p>Cerebri is a correct by construction autopilot. This software paradigm simplifies the verifcation and validation task through consideration of ease of verification at the the time of writing.</p> <p>Github</p>"},{"location":"cerebri/boards/nxp_mr_canhubk3/","title":"NXP MR CANHUBK3","text":"<p>More documentation coming soon.</p> <p>NXP documentation</p>"},{"location":"cerebri/boards/nxp_vmu_rt1170/","title":"NXP VMU RT1170 Overview","text":"<p>More documentation coming soon.</p> <p>Board schematics</p>"},{"location":"cerebri/platforms/multicopters/","title":"MultiCopters Overview","text":""},{"location":"cerebri/platforms/rovers/","title":"Rovers Overview","text":""},{"location":"cranium/about/","title":"About Cranium","text":""},{"location":"cranium/compute/navqplus/setup/","title":"NavQPlus set up for CogniPilot with ROS 2 Humble","text":"Looking for instructions on how to also install on a development computer? <p>Click here to get instructions on how to setup and configure a development computer.</p> Already previously followed all the steps to flash and configure the image on the NavQPlus and want to jump to installing CogniPilot on it? <p>Click here to jump to installing CogniPilot on NavQPlus.</p> About this guide <p>These directions are written for someone with experience with embedded Linux and basic embedded computers.</p>"},{"location":"cranium/compute/navqplus/setup/#step-by-step-overview","title":"Step-by-step overview","text":"<ol> <li>Download the pre-built latest image with Ubuntu<sup>1</sup> 22.04 and ROS 2<sup>3</sup> Humble, exact instructions for that release image are included on the release documentation to use in conjunction with this guide.</li> <li>Extract the image <code>navqplus-image-&lt;version&gt;.wic</code> from the compressed downloaded file <code>navqplus-image-&lt;version&gt;.wic.zstd</code> and flash it to the EMMC, exact copy and paste instructions are on the release page.</li> <li>Log in for the first time by connecting to another computer using the USB to UART adatper, ethernet adapter or centermost (USB 2) USB-C\u00ae port.<sup>2</sup></li> <li>Configure Wifi, System User Name and Password.</li> <li>Connect to NavQPlus over WiFi</li> <li>Install CogniPilot by running the included installer script.</li> </ol>"},{"location":"cranium/compute/navqplus/setup/#flashing-the-emmc","title":"Flashing the eMMC","text":"<p>To flash the eMMC on the NavQPlus use the uuu tool as part of the downloadable assests from the release.</p> <p>Once <code>uuu</code> has downloaded make sure to set it as executable:</p> <pre><code>chmod a+x uuu\n</code></pre> <p>find the boot switches on the NavQPlus and flip them to the \"Flash\" mode.</p> <p>Then, connect NavQPlus to the computer with the downloaded release using the leftmost (USB 1) USB-C\u00ae port and the two flash status lights should light up as shown in the image.  </p> <p>Run the following command to make sure that the NavQPlus is recognized by <code>uuu</code>:</p> <pre><code>./uuu -lsusb\n</code></pre> <p></p> <p>If it shows that a device is connected, continue to flashing. To flash the board, use the general command below or copy and paste the specific command from the release:</p> <pre><code>sudo ./uuu -b emmc_all navqplus-image-&lt;version&gt;.bin-flash_evk navqplus-image-&lt;version&gt;.wic\n</code></pre> <p>Once this process has finished, make sure that the flash was successfull by comparing to the image below. If so, configure the boot switches to boot from eMMC.</p> <p></p>"},{"location":"cranium/compute/navqplus/setup/#boot-switches","title":"Boot Switches","text":"<p>NavQPlus can be configured to boot from either SD card or eMMC. It also has a flash mode that allows for to flashing either the eMMC or SD card over USB-C\u00ae. See the table below for the boot switch configuration. Note we suggest to only flash and run from eMMC and leave the SD card for external storage.</p> Mode Switch 1 Switch 2 SD ON ON eMMC OFF ON Flash ON OFF"},{"location":"cranium/compute/navqplus/setup/#log-in-for-the-first-time","title":"Log in for the first time","text":"<p>Power on the NavQPlus by plugging in a USB-C\u00ae cable to the centermost (USB 2) USB-C\u00ae port or the 5 pin JST-GH power port if not powering over the centermost (USB 2) USB-C\u00ae port. NavQPlus will boot, and dispaly that it is fully booted with the status LEDs on board. The 3 LEDs by the USB1 port should be on, as well as two LEDs next to the CAN bus connectors.</p> <p>To log into NavQPlus, choose between using the included USB to UART adapter, Industrial Ethernet, or USB-C\u00ae with gadget ethernet mode. The default username/password combo is as follows:</p> <p>Username: user</p> <p>Password: user</p>"},{"location":"cranium/compute/navqplus/setup/#usb-to-uart-adapter","title":"USB to UART adapter","text":"<p>Connect the included USB to UART adapter to the UART2 port on the NavQPlus, and open a serial console application with a baud rate of 115200 8N1. Press enter if there is no output on the screen to get a log-in prompt. If using <code>screen</code>:</p> <pre><code>screen /dev/ttyUSB&lt;#&gt; 115200\n</code></pre> How to close cleanly out of <code>screen</code>. <p>To exit <code>screen</code> cleanly when done press simultaneously <code>Ctrl Shift A</code> followed by typing <code>k</code> then <code>y</code>.</p>"},{"location":"cranium/compute/navqplus/setup/#ethernet","title":"Ethernet","text":"<p>Connect the included IX Industrial Ethernet cable to NavQPlus, and connect the RJ45 connector to another computer, switch, or router on the local network. Log into NavQPlus over SSH. To SSH into NavQPlus, run the following command:</p> <pre><code>ssh &lt;username&gt;@&lt;hostname&gt;.local\n</code></pre> <p>Or depending on network setup:</p> <pre><code>ssh &lt;username&gt;@&lt;hostname&gt;\n</code></pre> Changing hostname <p>Default hostname is <code>imx8mpnavq</code>. The hostname can be changed and is suggested to be changed if running multiple NavQPlus on the same network.</p>"},{"location":"cranium/compute/navqplus/setup/#usb-c-gadget-ethernet","title":"USB-C\u00ae Gadget Ethernet","text":"<p>The IP address of the <code>usb0</code> network interface on NavQPlus is statically assigned to 192.168.186.3. To use the USB-C\u00ae gadget ethernet to connect to the NavQPlus, assign a static IP on the connecting computers existing gadget ethernet interface. The network configuration is as follows:</p> <p>IP Address: 192.168.186.2</p> <p>Network Mask: 255.255.255.0</p> <p></p> <p>Once USB-C\u00ae gadget ethernet interface is set up on the connected computer, SSH by running:</p> <pre><code>ssh &lt;username&gt;@&lt;hostname&gt;.local\n</code></pre> Changing hostname <p>Default hostname is <code>imx8mpnavq</code>. The hostname can be changed and is suggested to be changed if running multiple NavQPlus on the same network.</p>"},{"location":"cranium/compute/navqplus/setup/#configuring-wifi-system-hostname-username-or-password","title":"Configuring WiFi, System Hostname, Username or Password","text":""},{"location":"cranium/compute/navqplus/setup/#configuring-wifi-on-navqplus","title":"Configuring WiFi on NavQPlus","text":"<p>To connect NavQPlus to a WiFi network, use the <code>nmcli</code> command. The interface is relatively straightforward, to connect with <code>nmcli</code>, run the following command:</p> <pre><code>sudo nmcli device wifi connect &lt;network_name&gt; password \"&lt;password&gt;\"\n</code></pre> <p>If struggling to connect to a network, see if it is visible by running:</p> <pre><code>sudo nmcli device wifi list\n</code></pre> <p>Once connected to the WiFi network the NavQPlus will continue to connect to that network even after a reboot.</p> What wifi network is the NavQPlus currently connected to? <p>To see what Wifi network the NavQPlus is currently connected to run without <code>sudo</code>:</p> <p><code>nmcli device wifi list</code></p> <p>Or if running with <code>sudo</code> it will be the network preceeded with a star.</p>"},{"location":"cranium/compute/navqplus/setup/#optional-configuring-system-hostname-username-or-password","title":"OPTIONAL - Configuring System Hostname, Username or Password","text":"<p>Optionally, to change the default hostname, username, or password, use the commands below.</p>"},{"location":"cranium/compute/navqplus/setup/#change-hostname","title":"Change Hostname","text":"<pre><code>hostnamectl set-hostname &lt;new_hostname&gt;\n</code></pre>"},{"location":"cranium/compute/navqplus/setup/#change-username","title":"Change Username","text":"<p>Danger</p> <p>Changing the <code>username</code> can be dangerous and possibly result in a broken system state requiring a re-flash.</p> <pre><code>usermod -l &lt;new_username&gt; user\nmv /home/user /home/&lt;new_username&gt;\n</code></pre>"},{"location":"cranium/compute/navqplus/setup/#change-password","title":"Change Password","text":"<pre><code>passwd\n</code></pre>"},{"location":"cranium/compute/navqplus/setup/#connecting-to-navqplus-over-wifi","title":"Connecting to NavQPlus over WiFi","text":"<p>Once setup to connect over a local WiFi network, SSH into the NavQPlus over WiFi by running:</p> <pre><code>ssh &lt;username&gt;@&lt;hostname&gt;.local\n</code></pre> <p>Or depending on network setup:</p> <pre><code>ssh &lt;username&gt;@&lt;hostname&gt;\n</code></pre> Changing hostname <p>Default hostname is <code>imx8mpnavq</code>. The hostname can be changed and is suggested to be changed if running multiple NavQPlus on the same network.</p>"},{"location":"cranium/compute/navqplus/setup/#install-cognipilot-through-included-script","title":"Install CogniPilot through included script","text":"<p>Included in the image is an installation script that auto-updates when run. Before running make sure that the NavQPlus is connected to the internet on a network that allows it to download from github and Ubuntu servers.</p> <p>In the home directory there is a simple helper script that downloads and runs the latest CogniPilot NavQPlus installer.</p> Cloning with ssh keys: <p>If you want to use SSH keys with github on the NavQPlus you must first add or create them on the device. Otherwise you will need to answer <code>n</code> when asked to clone using already setup github ssh keys.</p> <p>Run the installer script:</p> <pre><code>./install_cognipilot.sh\n</code></pre> When prompted to choose whether or not to use ssh-keys: <ul> <li>y to clone with ssh keys, best for development work but only select if ssh keys are already present and setup with GitHub.</li> <li>n to clone with https, best for users who do not plan to make modifications or develop.</li> </ul> When prompted to choose whether or not to optimize runtime performance: <p>It is reccomended to select <code>y</code> for runtime optimization when prompted.</p> When prompted to choose a release: <ol> <li>airy for a stable non-development release.</li> <li>main for active development.</li> </ol> When prompted to choose a platform to build: <ol> <li>b3rb is an ackermann based mobile robotic platform.</li> <li>elm4 is a differential drive based mobile robotic platform.</li> </ol> Does CycloneDDS need configuring? <p>The NavQPlus Ubuntu 22.04 with ROS 2 Humble image uses CycloneDDS by default. Make sure to edit the default CycloneDDSConfig.xml to only allow the networks that are desired to connector over when trying to get maximal performance. An example of this is using only the wifi device <code>mlan0</code> to connect to a ROS 2 Domain. To save performance remove the other default included interfaces <code>eth1</code> and <code>usb0</code> by deleting those lines from the NavQPlus local <code>~/CycloneDDSconfig.xml</code>.</p> <ol> <li> <p>Ubuntu is a registered trademark of Canonical Ltd.\u00a0\u21a9</p> </li> <li> <p>USB-C\u00ae is a trademark of USB Implementers Forum.\u00a0\u21a9</p> </li> <li> <p>ROS 2 is governed by Open Robotics.\u00a0\u21a9</p> </li> </ol>"},{"location":"cranium/corti/corti/","title":"Corti Overview","text":""},{"location":"cranium/synapse/synapse/","title":"Synapse Overview","text":""},{"location":"dream/worlds/worlds/","title":"Worlds Overview","text":""},{"location":"electrode/about/","title":"About Electrode","text":""},{"location":"electrode/joystick/","title":"Joystick Overview","text":""},{"location":"electrode/rviz2/","title":"RVIZ 2 Overview","text":""},{"location":"getting_started/install/","title":"Installation for development computer","text":"Looking for instructions on how to also install on a NavQPlus? <p>Click here to get instructions on how to setup and configure a NavQPlus. Continue this guide for installing CogniPilot on a native development computer.</p>"},{"location":"getting_started/install/#requirements","title":"Requirements","text":"<ul> <li>Ubuntu 22.04 host environment.</li> <li>Stable internet connection for downloading and installing packages.</li> </ul> <p>This may work on other environments but only Ubuntu 22.04 is officially supported.</p>"},{"location":"getting_started/install/#optional-before-installing","title":"Optional before installing","text":""},{"location":"getting_started/install/#setup-ssh-keys-on-host-and-github","title":"Setup SSH keys on host and GitHub","text":"<p>If planning to develop and make changes to code it is suggested to set up ssh keys, however, it is not strictly required to do so.</p> <ul> <li>Ensure that ssh keys are setup on host computer and GitHub to be able to clone the CogniPilot repositories with ssh.</li> </ul>"},{"location":"getting_started/install/#setup-gpg-keys-on-host-and-github","title":"Setup GPG keys on host and GitHub","text":"<ul> <li>Optionally setup gpg keys on host computer and GitHub to sign commits.</li> </ul>"},{"location":"getting_started/install/#use-cognipilot-universal-installer","title":"Use CogniPilot universal installer","text":"Using Docker instead. <p>If preffering to use docker, there is a Docker Development Container that may be used instead.</p> <p>To install CogniPilot on a system run the following to download the universal installer and run it (follow the prompts in the installer):</p> <pre><code>sudo apt-get update\nsudo apt-get install git wget -y\nmkdir -p ~/cognipilot/installer\nwget -O ~/cognipilot/installer/install_cognipilot.sh https://raw.githubusercontent.com/CogniPilot/helmet/main/install/install_cognipilot.sh\nchmod a+x ~/cognipilot/installer/install_cognipilot.sh\n/bin/bash ~/cognipilot/installer/install_cognipilot.sh\n</code></pre> When prompted to choose a release: <ol> <li>airy for a stable non-development release.</li> <li>main for active development.</li> </ol> When prompted to choose installer type select 1 for native: <ol> <li>native select this for installing on development computer</li> <li>navqplus only if installing on a NavQPlus image that does not already have the installer on it. Click here for the proper way to install on a NavQPlus.</li> </ol> When prompted to choose whether or not to use ssh-keys: <ul> <li>y to clone with ssh keys, best for development work but only select if ssh keys are already present and setup with GitHub.</li> <li>n to clone with https, best for users who do not plan to make modifications or develop.</li> </ul>"},{"location":"getting_started/install/#build-the-workspace","title":"Build the workspace","text":"The <code>build_workspace</code> script: <ul> <li>Sets up the workspaces using vcs and yaml files provided in helmet.</li> <li>Builds Cranium ROS 2 workspace.</li> <li>Builds Cerebri (Zephyr RTOS native_sim) for software-in-the-loop simulation.</li> <li>Builds Cyecca (control/estimation software).</li> <li>Builds Electrode ROS 2 workspace (ground station software).</li> </ul> <p>To build the workspace run (follow the prompts in the workspace builder):</p> <pre><code>build_workspace\n</code></pre> When prompted to choose whether or not to use ssh-keys: <ul> <li>y to clone with ssh keys, best for development work but only select if ssh keys are already present and setup with GitHub.</li> <li>n to clone with https, best for users who do not plan to make modifications or develop.</li> </ul> When prompted to choose a platform to build: <ol> <li>b3rb is an ackermann based mobile robotic platform with simulation.</li> <li>elm4 is a differential drive based mobile robotic platform with simulation.</li> </ol>"},{"location":"getting_started/install/#platforms","title":"Platforms","text":"<p>Currently supported platforms in this release are B3RB and ELM4.</p>"},{"location":"getting_started/install/#using-a-real-platform","title":"Using a real platform:","text":"<ul> <li>B3RB hardware guide.</li> <li>ELM4 hardware guide coming soon.</li> </ul>"},{"location":"getting_started/install/#simulating-a-platform","title":"Simulating a platform:","text":"<ul> <li>B3RB simulation guide.</li> <li>ELM4 simulation guide coming soon.</li> </ul>"},{"location":"getting_started/install/#convenience-scripts","title":"Convenience Scripts","text":""},{"location":"getting_started/install/#docs-script","title":"docs script","text":"The <code>docs</code> script: <ul> <li>Downloads and builds the documentation repositories for the documentation currently being read so that contributions can be made easily.</li> <li>Allows for selection of documents to be served with mkdocs.</li> </ul> <p>To view the docs offline locally or to contribute to them run (follow the prompts for the correct docs):</p> <pre><code>docs\n</code></pre> When prompted to choose whether or not to use ssh-keys: <ul> <li>y to clone with ssh keys, best if contributing to the documentation but only select if ssh keys are already present and setup with GitHub.</li> <li>n to clone with https, best for users who do not plan to contribute and only want a local viewer.</li> </ul> When prompted to choose a doc to build: <ol> <li>airy is the airy developers guide site.</li> <li>overview is the release overview site.</li> </ol> I ran the command where are the docs? <p>Click here to access the locally built docs on 0.0.0.0:8000</p>"},{"location":"getting_started/install/#cyecca-script","title":"cyecca script","text":"The <code>cyecca</code> script: <ul> <li>Starts a JupyterLab instance for Cyecca to aid in developing control and estimation algorithms.</li> </ul> <p>To develop algorithms with cyecca run:</p> <pre><code>cyecca\n</code></pre>"},{"location":"getting_started/advanced/docker/","title":"Docker","text":"<p>If you wish, there is a development docker container (docker hub, docker source) for CogniPilot with Nvidia GPU support. If you use this option, do not run the native_install script, as the packages are already installed.</p>"},{"location":"getting_started/advanced/docker/#dependencies","title":"Dependencies","text":"<p>You must install the latest official docker.</p> <ul> <li>Install Docker</li> </ul> <p>Tip</p> <p>Don't forget Linux Post Install </p>"},{"location":"getting_started/advanced/docker/#clone-docker-repository","title":"Clone Docker Repository","text":"<p>On the Host</p> <pre><code>mkdir -p ~/cognipilot\ncd ~/cognipilot\ngit clone https://github.com/cognipilot/docker\ncd  ~/cognipilot/docker\ngit submodule update --init --recursive\n</code></pre>"},{"location":"getting_started/advanced/docker/#start-the-docker-image","title":"Start the Docker Image","text":"<p>The dream start command, automatically pulls the dream image from dockerhub, and starts the image.</p> <p>On the Host</p> <pre><code>cd ~/cognipilot/docker/dream\n./dream start\n</code></pre>"},{"location":"getting_started/advanced/docker/#execute-a-command-on-the-docker-image","title":"Execute a Command on the Docker Image","text":"<p>This starts a shell within the container.</p> <p>On the Host</p> <pre><code>./dream exec\n</code></pre> <p>If passed extra arguments will run those commands as well.</p>"},{"location":"getting_started/advanced/docker/#convenience-scripts-docker-specific","title":"Convenience Scripts (Docker Specific)","text":""},{"location":"getting_started/advanced/docker/#unlock","title":"unlock","text":"<p>This command executes the script docs.</p> <ul> <li>Unlocks GPG and SSH keys mounted in the docker image.</li> </ul> <p>Within the Container</p> <pre><code>unlock\n</code></pre> <p>See the other non-docker specific scripts in the main installation</p>"},{"location":"getting_started/advanced/docker/#build-the-docker-image-for-advanced-users","title":"Build the Docker Image (For Advanced Users)","text":"<p>This process will take awhile. It is usually sufficient to use dream start instead, which will automatically pull the latest image from dockerhub.</p> <p>On the Host</p> <pre><code>cd ~/cognipilot/docker/dream\n./dream build\n</code></pre>"},{"location":"helmet/","title":"Helmet Overview","text":""},{"location":"reference_systems/b3rb/hardware/","title":"B3RB Platform Overview","text":""},{"location":"reference_systems/b3rb/hardware/#example-of-navigation","title":"Example of Navigation","text":""},{"location":"reference_systems/b3rb/hardware/#status-sounds","title":"Status Sounds","text":"<p>These sounds allow for audio based system diagnosis.</p>"},{"location":"reference_systems/b3rb/hardware/#startup-sound","title":"Startup Sound","text":""},{"location":"reference_systems/b3rb/hardware/#flight-of-the-alicanto","title":"Flight of the Alicanto","text":"<p>Startup sound signifies the system has booted.</p> <p> </p>"},{"location":"reference_systems/b3rb/hardware/#state-change-request-sounds","title":"State Change Request Sounds","text":""},{"location":"reference_systems/b3rb/hardware/#rejected-state-change-request","title":"Rejected State Change Request","text":"<p>Low tone followed by mid-high-low-mid-high sinusoid.</p> <p> </p>"},{"location":"reference_systems/b3rb/hardware/#mode-sounds","title":"Mode Sounds","text":""},{"location":"reference_systems/b3rb/hardware/#manual-sound","title":"Manual Sound","text":"<p>Morse Code 1 for mode enum (. - - - -)</p> <p> </p>"},{"location":"reference_systems/b3rb/hardware/#cmd_vel-sound","title":"CMD_VEL Sound","text":"<p>Morse Code 3 for mode enum (. . . - -)</p> <p> </p>"},{"location":"reference_systems/b3rb/hardware/#calibration-sound","title":"Calibration Sound","text":"<p>Morse Code 4 for mode enum (. . . . -)</p> <p> </p>"},{"location":"reference_systems/b3rb/hardware/#safety-sounds","title":"Safety Sounds","text":""},{"location":"reference_systems/b3rb/hardware/#safety-off-sound","title":"Safety Off Sound","text":"<p>Morse Code S increasing long octives (- - -)</p> <p> </p>"},{"location":"reference_systems/b3rb/hardware/#safety-on-sound","title":"Safety On Sound","text":"<p>Morse Code S decreasing long octives (- - -)</p> <p> </p>"},{"location":"reference_systems/b3rb/hardware/#arming-sounds","title":"Arming Sounds","text":""},{"location":"reference_systems/b3rb/hardware/#arm-sound","title":"Arm Sound","text":"<p>Morse Code A mid-high tone (. -)</p> <p> </p>"},{"location":"reference_systems/b3rb/hardware/#disarm-sound","title":"Disarm Sound","text":"<p>Morse Code A mid-low tone (. -)</p> <p> </p>"},{"location":"reference_systems/b3rb/hardware/#connection-loss-sounds","title":"Connection Loss Sounds","text":""},{"location":"reference_systems/b3rb/hardware/#joy-input-loss-sound","title":"Joy Input Loss Sound","text":"<p>Morse Code E every 3 seconds ( . ) (sounds only after safety is off).</p> <p> </p>"},{"location":"reference_systems/b3rb/hardware/#fuel-status-sounds","title":"Fuel Status Sounds","text":""},{"location":"reference_systems/b3rb/hardware/#fuel-low-sound","title":"Fuel Low Sound","text":"<p>Morse Code EK every 10 seconds ( . - . - )</p> <p> </p>"},{"location":"reference_systems/b3rb/hardware/#fuel-critical-sound","title":"Fuel Critical Sound","text":"<p>Morse Code EK continuous ( . - . - )</p> <p> </p>"},{"location":"reference_systems/b3rb/simulation/","title":"B3RB Simulation","text":""},{"location":"reference_systems/b3rb/simulation/#run-b3rb-sil-in-jupyterlab-terminal-or-bash-directly","title":"Run B3RB SIL (in JupyterLab terminal or Bash directly)","text":"<pre><code>ros2 launch b3rb_gz_bringup sil.launch.py\n</code></pre> <p>Attention</p> <p>If running on a machine with a more powerful graphics card optionally run more gaphics intensive depot world:</p> <pre><code>ros2 launch b3rb_gz_bringup sil.launch.py world:=depot\n</code></pre>"},{"location":"reference_systems/b3rb/simulation/#simulation","title":"Simulation","text":"<p>Example of simulation running (depot world).</p> <p></p> <p>Attention</p> <p>Use a joystick controller (Logitech F310 suggested) to control vehicle modes.</p>"},{"location":"reference_systems/b3rb/simulation/#select-a-mode","title":"Select a Mode:","text":"<ul> <li>A: manual</li> <li>X: cmd_vel (nav2)</li> <li>B: auto (other cmd_vel)</li> <li>Y: calibration</li> </ul>"},{"location":"reference_systems/b3rb/simulation/#manual-mode","title":"Manual Mode:","text":"<ul> <li>Left stick Up/Down: throttle</li> <li>Right stick Left/Right: steering</li> </ul>"},{"location":"reference_systems/b3rb/simulation/#nav2-cmd_vel-mode","title":"Nav2 (cmd_vel) Mode:","text":"<ul> <li>Click 2D Pose Goal and select desired location on RVIZ2 map.</li> </ul>"},{"location":"reference_systems/b3rb/simulation/#auto-mode","title":"Auto Mode","text":"<ul> <li>Click 2D Pose Goal and select desired location on RVIZ2 map.</li> </ul>"},{"location":"reference_systems/b3rb/simulation/#arming","title":"Arming","text":"<ul> <li>START: arm</li> <li>BACK: disarm</li> </ul>"},{"location":"reference_systems/elm4/el_mandadero/","title":"El Mandadero Platform Overview","text":""},{"location":"reference_systems/elm4/simulation/","title":"Simulate El Mandadero","text":""},{"location":"reference_systems/melm/minimando/","title":"El Mandadero Platform Overview","text":""},{"location":"reference_systems/melm/simulation/","title":"Simulate MiniMando","text":""},{"location":"reference_systems/rddrone/rddrone/","title":"RDDRONE Platform Overview","text":""},{"location":"reference_systems/rddrone/simulation/","title":"Simulate RDDRONE","text":""},{"location":"spinali/canfd/","title":"CANFD Overview","text":""},{"location":"spinali/actuators/actuators/","title":"Actuators Overview","text":""},{"location":"spinali/sensors/sensors/","title":"Sensors Overview","text":""},{"location":"tools/cyecca/about/","title":"About Cyecca","text":""},{"location":"tools/hcdf/hcdf/","title":"HCDF Overview","text":""}]}